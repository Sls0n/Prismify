generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  isCreator      Boolean   @default(false)

  saves    Saves[]
  accounts Account[]
  settings UserSettings?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Article {
  id       String  @id @default(cuid())
  title    String
  slug     String  @unique
  summary  String? @db.Text
  imageUrl String? @db.Text
  content  String  @db.Text
  category String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([slug])
}

model Saves {
  id       String  @id @default(cuid())
  imageUrl String
  isPublic Boolean @default(true)
  userId   String
  user     User    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model UserSettings {
  id       String  @id @default(cuid())
  userId   String  @unique
  isPublic Boolean @default(true)
  user     User    @relation(fields: [userId], references: [id])
}
